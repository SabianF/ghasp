package components

type NotificationErrorType int

const (
  nUndefined NotificationErrorType = iota
  nSuccess
  nError
)

func (notifErr *NotificationErrorType) ToString() string {
  switch (*notifErr) {
    case nUndefined:
      return "Undefined"
    case nSuccess:
      return "Success"
    case nError:
      return "Error"
  }
  return "Unknown"
}

type NotificationErrorProps struct {
  Type NotificationErrorType
  Message string
  Details string
}

var handleNotificationCssListener = templ.NewOnceHandle()

templ NotificationContainer() {
  @handleNotificationCssListener.Once() {
    @notificationCss()
  }
  <div id="notifications"></div>
}

templ NotificationError(props NotificationErrorProps) {
  <div
    class="notification-card"
    _="
      on load
      wait 2s
      then transition my *opacity to 0% over 1s
      then remove me
    "
  >
    <svg class="wave" viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0,120 L1400,120 1400,320 0,320 0,120"
        fill-opacity="1"
      ></path>
    </svg>

    <div class="icon-container">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 512 512"
        stroke-width="0"
        fill="currentColor"
        stroke="currentColor"
        class="icon"
      >
        <path
          d="M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-111 111-47-47c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9l64 64c9.4 9.4 24.6 9.4 33.9 0L369 209z"
        ></path>
      </svg>
    </div>
    <div class="message-text-container">
      <p class="message-text">{ props.Message }</p>
      <p class="sub-text">{ props.Details }</p>
    </div>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 15 15"
      stroke-width="0"
      fill="none"
      stroke="currentColor"
      class="cross-icon"
      _="
        on click
        remove the closest parent <div/>
      "
    >
      <path
        fill="currentColor"
        d="M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z"
        clip-rule="evenodd"
        fill-rule="evenodd"
      ></path>
    </svg>
  </div>
}

// TODO: Make notification type variable
templ notificationCss() {
  <style id="notifications_css">
    #notifications {
      position: fixed;
      bottom: 16px;
      left: 32px;
    }
    .notification-card {
      width: 320px;
      height: 80px;
      border-radius: 8px;
      box-sizing: border-box;
      padding: 8px 16px;
      margin-top: 8px;
      margin-bottom: 8px;
      background-color: #222;
      position: relative;
      overflow: hidden;
      display: flex;
      align-items: center;
      justify-content: space-around;
      gap: 15px;
    }
    .wave {
      position: absolute;
      transform: rotate(90deg);
      left: -31px;
      top: 32px;
      width: 80px;
      fill: darkred;
    }
    .icon-container {
      width: 35px;
      height: 35px;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: darkred;
      border-radius: 50%;
      margin-left: 8px;
    }
    .icon {
      width: 17px;
      height: 17px;
    }
    .message-text-container {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      flex-grow: 1;
    }
    .message-text,
    .sub-text {
      margin: 0;
      cursor: default;
    }
    .message-text {
      font-size: 17px;
      font-weight: 700;
      color: red;
    }
    .sub-text {
      font-size: 14px;
      color: #888;
    }
    .cross-icon {
      width: 18px;
      height: 18px;
      color: #888;
      cursor: pointer;
    }
  </style>
}
